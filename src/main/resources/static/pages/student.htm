<!DOCTYPE html>
<html lang="zh">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student</title>
    <style>
        /* 头部样式 */
        .header {
            background-color: #f1f1f1;
            padding: 1px;
            text-align: center;
        }

        table {
            border: 1px solid black;
            border-collapse: collapse;
            background-color: hsl(0, 0%, 100%);
            display: inline-block;
            text-align: center;
            position: relative;
            bottom: 180px;
            left: 50px;
        }

        td,
        th {
            border: 1px black solid;
            padding: 10px 25px
        }

        table th {
            background-color: lightgray;
        }

        body {
            background-image: url('background.png');
        }

        /* 下划线 */
        a:link {color:#000000;}      /* 未访问链接*/
        a:visited {color:#025c02;}  /* 已访问链接 */
        a:hover {color:#5d0000;}  /* 鼠标移动到链接上 */
        a:active {color:#000072;}  /* 鼠标点击时 */
        a:link {text-decoration:none;}
        a:visited {text-decoration:none;}
        a:hover {text-decoration:underline;}
        a:active {text-decoration:underline;}

        /* p.background {
            background-color: #82aec1;
        }
        p.date {
            text-align: right;
        } */

        form {
            border: 1px solid rgb(0, 0, 0);
            padding: 0px 10px 10px;
            margin: 10px;
            display: inline-block;
            vertical-align: top;
        }

        input {
            display: inline-block;
            margin-bottom: 10px;
            background-color: rgb(255, 255, 255);
            text-align: right;
            -webkit-transition: width 0.4s ease-in-out;
            transition: width 0.4s ease-in-out;
        }

        input:focus {
            background-color: lightblue;
        }

        input[type=button],
        input[type=reset] {
            background-color: #3c3c3c;
            border: none;
            color: white;
            padding: 5px 10px;
            text-decoration: none;
            margin: 4px 2px;
            cursor: pointer;
        }

        input[type=button]:hover,
        input[type=reset]:hover {
            background-color: #a3a3a3;
        }

        select {
            width: 80%;
            border: none;
            border-radius: 4px;
            background-color: #ffffff;
        }

        /* 加入提示 */
        /* Tooltip 容器 */
        .tooltip {
            position: relative;
            display: inline-block;
            border-bottom: 1px dotted black;
            /* 悬停元素上显示点线 */
        }

        /* Tooltip 文本 */
        .tooltip .tooltiptext {
            visibility: hidden;
            width: 120px;
            background-color: black;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            position: absolute;
            z-index: 1;
            top: -5px;
            left: 110%;
        }

        /* 鼠标移动上去后显示提示框 */
        .tooltip .tooltiptext::after {
            content: "";
            position: absolute;
            top: 50%;
            right: 100%;
            margin-top: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: transparent black transparent transparent;
        }

        .tooltip:hover .tooltiptext {
            visibility: visible;
        }
    </style>
</head>

<body>
    <div class="header">
        <h1>Student</h1>
    </div>
    <p class="tooltip">
        <a href="/index.htm">Home Page</a>
        <span class="tooltiptext">加个提示看看</span>
    </p>

    <h4>分页查询</h4>
    <p>
        limit: <input id="limit" type="number" />
        offset: <input id="offset" type="number" />
        <button onclick="sendRequest()">获取</button>
    </p>

    <h4>按学生id查询</h4>
    <p>
        请输入需要查找的学生id: <input id="id" type="number" />
    </p>
    <button onclick="sendSelect()">查询</button>
    <br>
    <br>

    <form name="studentform1" onsubmit="return false;">
        <h4>创建</h4>
        <p class="background">
            姓名: <input name="name" />
        </p>
        <p class="background">
            性别:
            女 <input name="gender" type="radio" value="0">
            男 <input name="gender" type="radio" value="1">
        </p>
        <p class="background">
            班级:
            <select name="classId">
                <option value="1">一班</option>
                <option value="2">二班</option>
                <option value="3">三班</option>
            </select>
        </p>

        <input type="button" value="提交" onclick="handleSubmit()" />
        <input type="reset" value="重置" />
    </form>

    <form name="studentform2" onsubmit="return false;">
        <h4>更新</h4>
        <p class="date">
            Id:
            <input name="id" readonly="true" />
        </p>
        <p>
            姓名:
            <input name="name" />
        </p>
        <p>
            性别:
            女 <input name="gender" type="radio" value="0">
            男 <input name="gender" type="radio" value="1">
        </p>
        <p>
            班级:
            <select name="classId">
                <option value="1">一班</option>
                <option value="2">二班</option>
                <option value="3">三班</option>
            </select>
        </p>

        <input type="button" value="提交" onclick="handleUpdate()" />
        <input type="reset" value="重置" />
    </form>

    <table>
        <thead>
            <tr>
                <th>Id</th>
                <th>姓名</th>
                <th>性别</th>
                <th>班级</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody id="table">
        </tbody>
    </table>

    <script>
        const table = document.getElementById('table')
        const limitInput = document.getElementById('limit')
        const offsetInput = document.getElementById('offset')
        const idInput = document.getElementById('id')
        const form1 = document.forms.studentform1
        const form2 = document.forms.studentform2

        const classes = ['一班', '二班', '三班']

        function addRow(record) {
            let recordHtml = ''
            recordHtml += '<tr>'
            recordHtml += '<td>' + record.id + '</td>'
            recordHtml += '<td>' + record.name + '</td>'
            recordHtml += '<td>' + (record.gender ? '男' : '女  ') + '</td>'
            recordHtml += '<td>' + classes[record.classId - 1] + '</td>'
            recordHtml += '<td>'
            recordHtml += '  <button onclick="handleDelete(' + record.id + ')">删除</button>'
            recordHtml += '  <button onclick="clickUpdate(' + record.id + ', \'' + record.name + '\', ' + record.gender + ', ' + record.classId + ')">更新</button>'
            recordHtml += '</td>'
            recordHtml += '</tr>'
            table.innerHTML += recordHtml
        }

        async function getStudent(limit, offset) {
            const url = 'http://localhost:8080/students/list?limit=' + limit + '&offset=' + offset
            console.log('请求地址：', url)
            const data = await fetch(url).then(function getRequestFromAPI(response) {
                return response.json()
            })
            return data
        }

        async function sendRequest() {
            const limit = limitInput.value
            const offset = offsetInput.value
            const data = await getStudent(limit, offset)
            console.log('请求返回值：', data)

            table.innerHTML = ''
            for (let i = 0; i < data.length; i++) {
                addRow(data[i])
            }
        }
        sendRequest()

        async function getById(id) {
            const url = 'http://localhost:8080/students/' + id
            console.log('请求地址：', url)
            if (!id || !id.trim()) {
                alert("id没有输入，无法提交")
                return
            } else {
                id = id.trim()
            }
            const data = await fetch(url).then(function getRequestFromAPI(response) {
                return response.json()
            })
            return data
        }

        async function sendSelect() {
            const id = idInput.value
            const data = await getById(id)
            console.log('请求返回值：', data)

            table.innerHTML = ''
            addRow(data)

        }

        async function insertStudent(body) {
            const url = 'http://localhost:8080/students'
            console.log('请求地址：', url)
            console.log('请求载荷：', body)

            const data = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(body)
            }).then(function getRequestFromAPI(response) {
                return response.json()
            })
            return data
        }

        async function handleSubmit() {
            console.log('点击了提交按钮')
            const formData = new FormData(form1)
            const requestData = Object.fromEntries(formData)
            console.log('表单输入数据：', requestData)

            if (!requestData.name || !requestData.name.trim()) {
                alert("姓名没有输入，无法提交")
                return
            } else {
                requestData.name = requestData.name.trim()
            }
            if (!requestData.gender || !requestData.gender.trim()) {
                alert("性别没有输入，无法提交")
                return
            } else {
                requestData.gender = requestData.gender.trim()
            }

            const responseData = await insertStudent(requestData)
            console.log('请求返回值：', responseData)
            table.innerHTML = ''
            addRow(responseData)

            form1.reset()
        }

        async function deleteStudent(id) {
            const url = 'http://localhost:8080/students/' + id
            console.log('请求地址：', url)

            const data = await fetch(url, {
                method: 'DELETE',
            }).then(function getRequestFromAPI(response) {
                return response.json()
            })
            return data
        }

        async function handleDelete(id) {
            console.log('点击了删除按钮, id:', id)
            await deleteStudent(id)
            await sendRequest()
        }

        function clickUpdate(id, name, gender, classId) {
            form2.id.value = id
            form2.name.value = name
            form2.gender.value = gender
            form2.classId.value = classId
            console.log('更新数据：', { id, name, gender, classId })
        }

        async function updateStudent(id, body) {
            const url = 'http://localhost:8080/students/' + id
            console.log('请求地址：', url)
            console.log('请求载荷：', body)

            const data = await fetch(url, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(body)
            }).then(function getRequestFromAPI(response) {
                return response.json()
            })
            return data
        }

        async function handleUpdate() {
            console.log('点击了提交按钮')
            const formData = new FormData(form2)
            const requestData = Object.fromEntries(formData)
            console.log('表单输入数据：', requestData)

            if (!requestData.name || !requestData.name.trim()) {
                alert("姓名没有输入，无法提交")
                return
            } else {
                requestData.name = requestData.name.trim()
            }
            if (!requestData.gender || !requestData.gender.trim()) {
                alert("性别没有输入，无法提交")
                return
            } else {
                requestData.gender = requestData.gender.trim()
            }

            const responseData = await updateStudent(requestData.id, {
                name: requestData.name,
                gender: requestData.gender,
                classId: requestData.classId,
            })
            console.log('请求返回值：', responseData)
            table.innerHTML = ''
            addRow(responseData)

            form2.reset()
        }
    </script>
</body>

</html>